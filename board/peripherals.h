/***********************************************************************************************************************
 * This file was generated by the MCUXpresso Config Tools. Any manual edits made to this file
 * will be overwritten if the respective MCUXpresso Config Tools is used to update this file.
 **********************************************************************************************************************/

#ifndef _PERIPHERALS_H_
#define _PERIPHERALS_H_

/***********************************************************************************************************************
 * Included files
 **********************************************************************************************************************/
#include "fsl_edma.h"
#include "stdlib.h"
#include "fsl_common.h"
#include "fsl_lpuart.h"
#include "fsl_clock.h"
#include "fsl_gpio.h"
#include "fsl_port.h"
#include "fsl_lpuart_edma.h"
#include "fsl_ostimer.h"

#if defined(__cplusplus)
extern "C" {
#endif /* __cplusplus */

/***********************************************************************************************************************
 * Definitions
 **********************************************************************************************************************/
/* Definitions for BOARD_InitPeripherals functional group */
/* Used DMA device. */
#define DMA0_DMA_BASEADDR (EDMA_Type *)DMA0
/* Definition of peripheral ID */
#define LPUART0_PERIPHERAL LPUART0
/* Definition of the clock source frequency */
#define LPUART0_CLOCK_SOURCE 4000000UL
/* LPUART0 interrupt vector ID (number). */
#define LPUART0_SERIAL_RX_TX_IRQN LPUART0_IRQn
/* LPUART0 interrupt handler identifier. */
#define LPUART0_SERIAL_RX_TX_IRQHANDLER LPUART0_IRQHandler
/* Alias for GPIO0 peripheral */
#define GPIO0_GPIO GPIO0
/* BOARD_InitPeripherals defines for SysTick */
/* Definition of clock source frequency. */
#define SYSTICK_CLK_FREQ 48000000UL
/* Definition of clock source frequency. */
#define SYSTICK_TICKS 48000UL
/* SysTick interrupt vector ID (number). */
#define SYSTICK_TIMER_REFERENCE_IRQN SysTick_IRQn
/* SysTick interrupt handler identifier. */
#define SYSTICK_TIMER_REFERENCE_IRQHANDLER SysTick_Handler
/* Definition of peripheral ID */
#define LPUART2_PERIPHERAL LPUART2
/* Definition of the clock source frequency */
#define LPUART2_CLOCK_SOURCE 4000000UL
/* LPUART2 eDMA source request. */
#define LPUART2_RX_DMA_REQUEST kDma0RequestLPUART2Rx
/* Selected eDMA channel number. */
#define LPUART2_RX_DMA_CHANNEL 0
/* Used DMA device. */
#define LPUART2_RX_DMA_BASEADDR DMA0
/* LPUART2 eDMA source request. */
#define LPUART2_TX_DMA_REQUEST kDma0RequestLPUART2Tx
/* Selected eDMA channel number. */
#define LPUART2_TX_DMA_CHANNEL 1
/* Used DMA device. */
#define LPUART2_TX_DMA_BASEADDR DMA0
/* BOARD_InitPeripherals defines for OSTIMER0 */
/* Definition of peripheral ID */
#define OSTIMER0_PERIPHERAL OSTIMER0
/* Timer clock frequency in Hz (input frequency of the timer) */
#define OSTIMER0_CLK_FREQ 16384UL
/* Timer clock period in ns (input period of the timer) */
#define OSTIMER0_CLK_PERIOD 61035UL

/***********************************************************************************************************************
 * Global variables
 **********************************************************************************************************************/
extern edma_config_t DMA0_config;
extern const lpuart_config_t LPUART0_config;
extern const lpuart_config_t LPUART2_config;
extern edma_handle_t LPUART2_RX_Handle;
extern edma_handle_t LPUART2_TX_Handle;
extern lpuart_edma_handle_t LPUART2_LPUART_eDMA_Handle;

/***********************************************************************************************************************
 * Initialization functions
 **********************************************************************************************************************/

void BOARD_InitPeripherals(void);

/***********************************************************************************************************************
 * BOARD_InitBootPeripherals function
 **********************************************************************************************************************/
void BOARD_InitBootPeripherals(void);

#if defined(__cplusplus)
}
#endif

#endif /* _PERIPHERALS_H_ */
