/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9-dev */

#ifndef PB_CARTRACK_CARTRACK_PB_H_INCLUDED
#define PB_CARTRACK_CARTRACK_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _CarTrack_Point {
    int32_t latitude; /* As an uint, so deg*1 000 000 */
    int32_t longitude; /* As an uint, so deg*1 000 000 */
    int32_t altitude; /* In milimeters */
    bool has_speed;
    uint32_t speed; /* In deca-meters/hour, so kmh*100. None means 0 */
    uint64_t timestamp; /* Seconds since 01/01/1970 */
    bool has_power;
    uint32_t power; /* 0-100% for battery level. None means plugged/charging */
    int32_t temperature; /* As an int, so Â°C*100 */
} CarTrack_Point;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define CarTrack_Point_init_default              {0, 0, 0, false, 0, 0, false, 0, 0}
#define CarTrack_Point_init_zero                 {0, 0, 0, false, 0, 0, false, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define CarTrack_Point_latitude_tag              1
#define CarTrack_Point_longitude_tag             2
#define CarTrack_Point_altitude_tag              3
#define CarTrack_Point_speed_tag                 4
#define CarTrack_Point_timestamp_tag             5
#define CarTrack_Point_power_tag                 6
#define CarTrack_Point_temperature_tag           7

/* Struct field encoding specification for nanopb */
#define CarTrack_Point_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, SINT32,   latitude,          1) \
X(a, STATIC,   REQUIRED, SINT32,   longitude,         2) \
X(a, STATIC,   REQUIRED, SINT32,   altitude,          3) \
X(a, STATIC,   OPTIONAL, UINT32,   speed,             4) \
X(a, STATIC,   REQUIRED, UINT64,   timestamp,         5) \
X(a, STATIC,   OPTIONAL, UINT32,   power,             6) \
X(a, STATIC,   REQUIRED, SINT32,   temperature,       7)
#define CarTrack_Point_CALLBACK NULL
#define CarTrack_Point_DEFAULT NULL

extern const pb_msgdesc_t CarTrack_Point_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define CarTrack_Point_fields &CarTrack_Point_msg

/* Maximum encoded size of messages (where known) */
#define CARTRACK_CARTRACK_PB_H_MAX_SIZE          CarTrack_Point_size
#define CarTrack_Point_size                      47

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
